#Область ОписаниеПеременных

Перем КонтекстЯдра;
Перем Утверждения;
Перем УтвержденияПроверкаТаблиц;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ИнтерфейсТестирования

Функция КлючНастройки() Экспорт
	
	Возврат "ЗаписьЭлементовСправочников";
	
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	
	ЗагрузитьНастройки();
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	ЗагрузитьНастройки();
	
	Если Не НужноВыполнятьТест() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого МетаОбъект Из Метаданные.Справочники Цикл
		Если ПравоДоступа("Изменение", МетаОбъект) Тогда
			ДобавитьТестыДляСправочника(НаборТестов, МетаОбъект);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область Тесты

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
	    ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

Процедура Тест_ЗаписатьЭлементСправочника(СправочникСсылка) Экспорт
	
	ЭлементОбъект = СправочникСсылка.ПолучитьОбъект();
	ЭлементОбъект.Записать();
	
КонецПроцедуры

Процедура Тест_ПропуститьЗаписьЭлементаСправочника(Знач Сообщение) Экспорт
	
	КонтекстЯдра.ПропуститьТест(Сообщение);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Настройки

Процедура ЗагрузитьНастройки()
	
	Если ЗначениеЗаполнено(Настройки) Тогда
		Возврат;
	КонецЕсли;

    ПлагинНастройки = КонтекстЯдра.Плагин("Настройки");
    ПлагинНастройки.Инициализация(КонтекстЯдра);
    
    Настройки = ПлагинНастройки.ПолучитьНастройку(КлючНастройки());
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", Истина);
	Результат.Вставить("КоличествоЭлементов", 10);
	Результат.Вставить("Исключения", Новый Массив);
	
	Возврат Результат;
	
КонецФункции

Функция НужноВыполнятьТест()
	
	ЗагрузитьНастройки();
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	КлючНастройки = КлючНастройки();
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Используется", ВыполнятьТест) Тогда

			Возврат ВыполнятьТест = Истина;	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

Процедура ДобавитьТестыДляСправочника(НаборТестов, МетаОбъект)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ссылка,
	|	Представление
	|ИЗ
	|	Справочник." + МетаОбъект.Имя + "";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
								"ВЫБРАТЬ ПЕРВЫЕ 1", 
								"ВЫБРАТЬ ПЕРВЫЕ " + Формат(Настройки.КоличествоЭлементов, "ЧГ=")
								);	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли; 
	
	НаборТестов.НачатьГруппу(МетаОбъект.Синоним + " - Справочник."  + МетаОбъект.Имя);
		
	ПредставлениеТеста = "Проверка записи элемента справочника - " + МетаОбъект.Имя;
	Сообщение = "Пропускаем из-за исключения по имени справочника - " + ПредставлениеТеста;
	Если ДобавитьТестИсключениеЕслиЕстьВИсключаемойКоллекции(МетаОбъект.Имя, Настройки.Исключения, 
				Сообщение, НаборТестов) Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Выборка.Ссылка);
		ПредставлениеТеста = "Проверка записи элемента справочника - " + Выборка.Представление;
		
		НаборТестов.Добавить("Тест_ЗаписатьЭлементСправочника", ПараметрыТеста, ПредставлениеТеста);			
	КонецЦикла; 
		
КонецПроцедуры

Функция ДобавитьТестИсключениеЕслиЕстьВИсключаемойКоллекции(Знач ЧтоИщем, Знач КоллекцияДляПоиска, Знач Сообщение, 
			Знач НаборТестов)
			
	Если КонтекстЯдра.ЕстьВИсключаемойКоллекции(ЧтоИщем, КоллекцияДляПоиска) Тогда
		КонтекстЯдра.Отладка(Сообщение);
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Сообщение);
		НаборТестов.Добавить("Тест_ПропуститьЗаписьЭлементаСправочника", ПараметрыТеста, Сообщение);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

Функция ИмяТеста()
	
	Возврат Метаданные().Имя;
	
КонецФункции

#КонецОбласти
